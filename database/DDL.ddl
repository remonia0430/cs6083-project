-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-03-21 15:54:45 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE HXY_AUTHOR 
    ( 
     AUTHNO  NUMBER (5)  NOT NULL , 
     AFNAME  VARCHAR2 (30)  NOT NULL , 
     ALNAME  VARCHAR2 (30)  NOT NULL , 
     STREET  VARCHAR2 (30)  NOT NULL , 
     CITY    VARCHAR2 (30)  NOT NULL , 
     ZIPCODE VARCHAR2 (5)  NOT NULL , 
     EMAIL   VARCHAR2 (320)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_AUTHOR.AFNAME IS 'Author First Name' 
;

COMMENT ON COLUMN HXY_AUTHOR.ALNAME IS 'Author Last Name' 
;

COMMENT ON COLUMN HXY_AUTHOR.STREET IS 'Street of Mailing Address' 
;

COMMENT ON COLUMN HXY_AUTHOR.CITY IS 'City of Mailing Address' 
;

COMMENT ON COLUMN HXY_AUTHOR.ZIPCODE IS 'Zipcode of Mailing Address' 
;

COMMENT ON COLUMN HXY_AUTHOR.EMAIL IS 'Author Email Address' 
;

ALTER TABLE HXY_AUTHOR 
    ADD CONSTRAINT HXY_AUTHOR_PK PRIMARY KEY ( AUTHNO ) ;

CREATE TABLE HXY_AUTHOR_SEMINAR 
    ( 
     INVID    VARCHAR2 (20)  NOT NULL , 
     AUTHNO   NUMBER (5)  NOT NULL , 
     ENVENTID NUMBER (3)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_AUTHOR_SEMINAR.INVID IS 'Invitation ID' 
;

ALTER TABLE HXY_AUTHOR_SEMINAR 
    ADD CONSTRAINT HXY_AUTHOR_SEMINAR_PK PRIMARY KEY ( INVID ) ;

CREATE TABLE HXY_BOOK 
    ( 
     BOOKNO  NUMBER (5)  NOT NULL , 
     BNAME   VARCHAR2 (255)  NOT NULL , 
     TOPICID NUMBER (2)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_BOOK.BOOKNO IS 'Book ID Number' 
;

COMMENT ON COLUMN HXY_BOOK.BNAME IS 'Book Name' 
;

ALTER TABLE HXY_BOOK 
    ADD CONSTRAINT HXY_BOOK_PK PRIMARY KEY ( BOOKNO ) ;

CREATE TABLE HXY_BOOK_AUTHOR 
    ( 
     BOOKNO NUMBER (5)  NOT NULL , 
     AUTHNO NUMBER (5)  NOT NULL 
    ) 
;

ALTER TABLE HXY_BOOK_AUTHOR 
    ADD CONSTRAINT HXY_BOOK_AUTHOR_PK PRIMARY KEY ( BOOKNO, AUTHNO ) ;

CREATE TABLE HXY_COPY 
    ( 
     COPYNO NUMBER (1)  NOT NULL , 
     STATUS VARCHAR2 (20)  NOT NULL , 
     BOOKNO NUMBER (5)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_COPY.COPYNO IS 'Copy ID Number' 
;

COMMENT ON COLUMN HXY_COPY.STATUS IS 'Copy is Available or Not' 
;

ALTER TABLE HXY_COPY 
    ADD CONSTRAINT HXY_COPY_PK PRIMARY KEY ( COPYNO, BOOKNO ) ;

CREATE TABLE HXY_CUSTOMER 
    ( 
     CUSTNO NUMBER (4)  NOT NULL , 
     CFNAME VARCHAR2 (30)  NOT NULL , 
     CLNAME VARCHAR2 (30)  NOT NULL , 
     PHONE  VARCHAR2 (20)  NOT NULL , 
     EMAIL  VARCHAR2 (320)  NOT NULL , 
     IDTYPE VARCHAR2 (20)  NOT NULL , 
     IDNO   VARCHAR2 (50)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_CUSTOMER.CUSTNO IS 'Customer ID Number' 
;

COMMENT ON COLUMN HXY_CUSTOMER.CFNAME IS 'Customer First Name' 
;

COMMENT ON COLUMN HXY_CUSTOMER.CLNAME IS 'Customer Last Name' 
;

COMMENT ON COLUMN HXY_CUSTOMER.PHONE IS 'Customer Phone Number' 
;

COMMENT ON COLUMN HXY_CUSTOMER.EMAIL IS 'Customer Email Address' 
;

COMMENT ON COLUMN HXY_CUSTOMER.IDTYPE IS 'Customer Identification Type' 
;

COMMENT ON COLUMN HXY_CUSTOMER.IDNO IS 'Customer Identification Number' 
;

ALTER TABLE HXY_CUSTOMER 
    ADD CONSTRAINT HXY_CUSTOMER_PK PRIMARY KEY ( CUSTNO ) ;

CREATE TABLE HXY_CUSTOMER_EXHIBITION 
    ( 
     REGID    VARCHAR2 (20)  NOT NULL , 
     ENVENTID NUMBER (3)  NOT NULL , 
     CUSTNO   NUMBER (4)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_CUSTOMER_EXHIBITION.REGID IS 'Registration ID Number' 
;

ALTER TABLE HXY_CUSTOMER_EXHIBITION 
    ADD CONSTRAINT HXY_CUSTOMER_EXHIBITION_PK PRIMARY KEY ( REGID ) ;

CREATE TABLE HXY_EVENT 
    ( 
     ENVENTID  NUMBER (3)  NOT NULL , 
     ENAME     VARCHAR2 (30)  NOT NULL , 
     ETYPE     VARCHAR2 (14)  NOT NULL , 
     STARTDATE DATE  NOT NULL , 
     ENDDATE   DATE  NOT NULL , 
     TOPICID   NUMBER (2)  NOT NULL 
    ) 
;

ALTER TABLE HXY_EVENT 
    ADD CONSTRAINT CH_INH_HXY_EVENT 
    CHECK (ETYPE IN ('HXY_EXHIBITION', 'HXY_SEMINAR')) 
;

COMMENT ON COLUMN HXY_EVENT.ENVENTID IS 'Event ID Number' 
;

COMMENT ON COLUMN HXY_EVENT.ENAME IS 'Event Name' 
;

COMMENT ON COLUMN HXY_EVENT.ETYPE IS 'Event Type' 
;

COMMENT ON COLUMN HXY_EVENT.STARTDATE IS 'Evenr Start Datetime' 
;

COMMENT ON COLUMN HXY_EVENT.ENDDATE IS 'Event End Datetime' 
;

ALTER TABLE HXY_EVENT 
    ADD CONSTRAINT HXY_EVENT_PK PRIMARY KEY ( ENVENTID ) ;

CREATE TABLE HXY_EVENT_SPONSOR 
    ( 
     AMOUNT    NUMBER (12,2)  NOT NULL , 
     ENVENTID  NUMBER (3)  NOT NULL , 
     SPONSORNO NUMBER (4)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_EVENT_SPONSOR.AMOUNT IS 'Sponsorship Amount' 
;

ALTER TABLE HXY_EVENT_SPONSOR 
    ADD CONSTRAINT HXY_EVENT_SPONSOR_PK PRIMARY KEY ( ENVENTID, SPONSORNO ) ;

CREATE TABLE HXY_EXHIBITION 
    ( 
     ENVENTID NUMBER (3)  NOT NULL , 
     EXPENSE  NUMBER (12,2)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_EXHIBITION.ENVENTID IS 'Event ID Number' 
;

COMMENT ON COLUMN HXY_EXHIBITION.EXPENSE IS 'Exhibition Expense' 
;

ALTER TABLE HXY_EXHIBITION 
    ADD CONSTRAINT HXY_EXHIBITION_PK PRIMARY KEY ( ENVENTID ) ;

CREATE TABLE HXY_INDIVIDUAL 
    ( 
     SPONSORNO NUMBER (4)  NOT NULL , 
     SFNAME    VARCHAR2 (30)  NOT NULL , 
     SLNAME    VARCHAR2 (30)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_INDIVIDUAL.SPONSORNO IS 'Sponsor ID Number' 
;

COMMENT ON COLUMN HXY_INDIVIDUAL.SFNAME IS 'Sponsor First Name' 
;

COMMENT ON COLUMN HXY_INDIVIDUAL.SLNAME IS 'Sponsor Last Name' 
;

ALTER TABLE HXY_INDIVIDUAL 
    ADD CONSTRAINT HXY_INDIVIDUAL_PK PRIMARY KEY ( SPONSORNO ) ;

CREATE TABLE HXY_INVOICE 
    ( 
     INVDATE   DATE  NOT NULL , 
     INVAMOUNT NUMBER (8,2)  NOT NULL , 
     RENTID    NUMBER (10)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_INVOICE.INVDATE IS 'Invoice Date' 
;

COMMENT ON COLUMN HXY_INVOICE.INVAMOUNT IS 'Invoice Amount' 
;

ALTER TABLE HXY_INVOICE 
    ADD CONSTRAINT HXY_INVOICE_PK PRIMARY KEY ( RENTID ) ;

CREATE TABLE HXY_ORGANIZATION 
    ( 
     SPONSORNO NUMBER (4)  NOT NULL , 
     ONAME     VARCHAR2 (30)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_ORGANIZATION.SPONSORNO IS 'Sponsor ID Number' 
;

COMMENT ON COLUMN HXY_ORGANIZATION.ONAME IS 'Organization Name' 
;

ALTER TABLE HXY_ORGANIZATION 
    ADD CONSTRAINT HXY_ORGANIZATION_PK PRIMARY KEY ( SPONSORNO ) ;

CREATE TABLE HXY_PAYMENT 
    ( 
     PAYID     NUMBER (10)  NOT NULL , 
     PAYDATE   DATE  NOT NULL , 
     METHOD    VARCHAR2 (10)  NOT NULL , 
     CFNAME    VARCHAR2 (30) , 
     CLNAME    VARCHAR2 (30) , 
     PAYAMOUNT NUMBER (8,2)  NOT NULL , 
     RENTID    NUMBER (10)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_PAYMENT.PAYDATE IS 'Payment Date' 
;

COMMENT ON COLUMN HXY_PAYMENT.METHOD IS 'Payment Method' 
;

COMMENT ON COLUMN HXY_PAYMENT.CFNAME IS 'Card Holder First Name' 
;

COMMENT ON COLUMN HXY_PAYMENT.CLNAME IS 'Card Holder Last Name' 
;

COMMENT ON COLUMN HXY_PAYMENT.PAYAMOUNT IS 'Payment Amount' 
;

ALTER TABLE HXY_PAYMENT 
    ADD CONSTRAINT HXY_PAYMENT_PK PRIMARY KEY ( PAYID ) ;

CREATE TABLE HXY_RENTAL 
    ( 
     RENTID      NUMBER (10)  NOT NULL , 
     RSTATUS     VARCHAR2 (10)  NOT NULL , 
     BORROWDATE  DATE  NOT NULL , 
     ERETURNDATE DATE  NOT NULL , 
     ARETURNDATE DATE , 
     COPYNO      NUMBER (1)  NOT NULL , 
     BOOKNO      NUMBER (5)  NOT NULL , 
     CUSTNO      NUMBER (4)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_RENTAL.RENTID IS 'Rental Service ID Number' 
;

COMMENT ON COLUMN HXY_RENTAL.RSTATUS IS 'Rental Status' 
;

COMMENT ON COLUMN HXY_RENTAL.BORROWDATE IS 'Borrow Date' 
;

COMMENT ON COLUMN HXY_RENTAL.ERETURNDATE IS 'Expexted Return Date' 
;

COMMENT ON COLUMN HXY_RENTAL.ARETURNDATE IS 'Actual Return Date' 
;

ALTER TABLE HXY_RENTAL 
    ADD CONSTRAINT HXY_RENTAL_PK PRIMARY KEY ( RENTID ) ;

CREATE TABLE HXY_RESERVATION 
    ( 
     RESID     NUMBER (10)  NOT NULL , 
     TOPIC     VARCHAR2 (255)  NOT NULL , 
     RESDATE   DATE  NOT NULL , 
     STARTTIME DATE  NOT NULL , 
     ENDTIME   DATE  NOT NULL , 
     NOI       NUMBER (2)  NOT NULL , 
     CUSTNO    NUMBER (4)  NOT NULL , 
     ROOMNO    NUMBER (3)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_RESERVATION.RESID IS 'Reservation ID Number' 
;

COMMENT ON COLUMN HXY_RESERVATION.TOPIC IS 'Brief Discription of the Study' 
;

COMMENT ON COLUMN HXY_RESERVATION.RESDATE IS 'Reservation Date' 
;

COMMENT ON COLUMN HXY_RESERVATION.STARTTIME IS 'Start Time' 
;

COMMENT ON COLUMN HXY_RESERVATION.ENDTIME IS 'End Time' 
;

COMMENT ON COLUMN HXY_RESERVATION.NOI IS 'Number of Individuals in Group' 
;

ALTER TABLE HXY_RESERVATION 
    ADD CONSTRAINT HXY_RESERVATION_PK PRIMARY KEY ( RESID ) ;

CREATE TABLE HXY_ROOM 
    ( 
     ROOMNO   NUMBER (3)  NOT NULL , 
     CAPACITY NUMBER (2)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_ROOM.ROOMNO IS 'Study Room ID Number' 
;

COMMENT ON COLUMN HXY_ROOM.CAPACITY IS 'Study Room Capacity' 
;

ALTER TABLE HXY_ROOM 
    ADD CONSTRAINT HXY_ROOM_PK PRIMARY KEY ( ROOMNO ) ;

CREATE TABLE HXY_SEMINAR 
    ( 
     ENVENTID NUMBER (3)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_SEMINAR.ENVENTID IS 'Event ID Number' 
;

ALTER TABLE HXY_SEMINAR 
    ADD CONSTRAINT HXY_SEMINAR_PK PRIMARY KEY ( ENVENTID ) ;

CREATE TABLE HXY_SPONSOR 
    ( 
     SPONSORNO NUMBER (4)  NOT NULL , 
     STYPE     VARCHAR2 (16)  NOT NULL 
    ) 
;

ALTER TABLE HXY_SPONSOR 
    ADD CONSTRAINT CH_INH_HXY_SPONSOR 
    CHECK (STYPE IN ('HXY_INDIVIDUAL', 'HXY_ORGANIZATION')) 
;

COMMENT ON COLUMN HXY_SPONSOR.SPONSORNO IS 'Sponsor ID Number' 
;

COMMENT ON COLUMN HXY_SPONSOR.STYPE IS 'Sponsor Type' 
;

ALTER TABLE HXY_SPONSOR 
    ADD CONSTRAINT HXY_SPONSOR_PK PRIMARY KEY ( SPONSORNO ) ;

CREATE TABLE HXY_TOPIC 
    ( 
     TOPICID NUMBER (2)  NOT NULL , 
     TNAME   VARCHAR2 (255)  NOT NULL 
    ) 
;

COMMENT ON COLUMN HXY_TOPIC.TOPICID IS 'Topic ID Number' 
;

COMMENT ON COLUMN HXY_TOPIC.TNAME IS 'Topic Name' 
;

ALTER TABLE HXY_TOPIC 
    ADD CONSTRAINT HXY_TOPIC_PK PRIMARY KEY ( TOPICID ) ;

ALTER TABLE HXY_AUTHOR_SEMINAR 
    ADD CONSTRAINT HXY_AUTHOR_SEMINAR_AUTHOR_FK FOREIGN KEY 
    ( 
     AUTHNO
    ) 
    REFERENCES HXY_AUTHOR 
    ( 
     AUTHNO
    ) 
;

ALTER TABLE HXY_AUTHOR_SEMINAR 
    ADD CONSTRAINT HXY_AUTHOR_SEMINAR_SEMINAR_FK FOREIGN KEY 
    ( 
     ENVENTID
    ) 
    REFERENCES HXY_SEMINAR 
    ( 
     ENVENTID
    ) 
;

ALTER TABLE HXY_BOOK_AUTHOR 
    ADD CONSTRAINT HXY_BOOK_AUTHOR_HXY_AUTHOR_FK FOREIGN KEY 
    ( 
     AUTHNO
    ) 
    REFERENCES HXY_AUTHOR 
    ( 
     AUTHNO
    ) 
;

ALTER TABLE HXY_BOOK_AUTHOR 
    ADD CONSTRAINT HXY_BOOK_AUTHOR_HXY_BOOK_FK FOREIGN KEY 
    ( 
     BOOKNO
    ) 
    REFERENCES HXY_BOOK 
    ( 
     BOOKNO
    ) 
;

ALTER TABLE HXY_BOOK 
    ADD CONSTRAINT HXY_BOOK_HXY_TOPIC_FK FOREIGN KEY 
    ( 
     TOPICID
    ) 
    REFERENCES HXY_TOPIC 
    ( 
     TOPICID
    ) 
;

ALTER TABLE HXY_COPY 
    ADD CONSTRAINT HXY_COPY_HXY_BOOK_FK FOREIGN KEY 
    ( 
     BOOKNO
    ) 
    REFERENCES HXY_BOOK 
    ( 
     BOOKNO
    ) 
;

ALTER TABLE HXY_CUSTOMER_EXHIBITION 
    ADD CONSTRAINT HXY_CUST_EXHIBITION_CUST_FK FOREIGN KEY 
    ( 
     CUSTNO
    ) 
    REFERENCES HXY_CUSTOMER 
    ( 
     CUSTNO
    ) 
;

ALTER TABLE HXY_CUSTOMER_EXHIBITION 
    ADD CONSTRAINT HXY_CUST_EXHIBITION_EXHIB_FK FOREIGN KEY 
    ( 
     ENVENTID
    ) 
    REFERENCES HXY_EXHIBITION 
    ( 
     ENVENTID
    ) 
;

ALTER TABLE HXY_EVENT 
    ADD CONSTRAINT HXY_EVENT_HXY_TOPIC_FK FOREIGN KEY 
    ( 
     TOPICID
    ) 
    REFERENCES HXY_TOPIC 
    ( 
     TOPICID
    ) 
;

ALTER TABLE HXY_EVENT_SPONSOR 
    ADD CONSTRAINT HXY_EVENT_SPONSOR_SEMINAR_FK FOREIGN KEY 
    ( 
     ENVENTID
    ) 
    REFERENCES HXY_SEMINAR 
    ( 
     ENVENTID
    ) 
;

ALTER TABLE HXY_EVENT_SPONSOR 
    ADD CONSTRAINT HXY_EVENT_SPONSOR_SPONSOR_FK FOREIGN KEY 
    ( 
     SPONSORNO
    ) 
    REFERENCES HXY_SPONSOR 
    ( 
     SPONSORNO
    ) 
;

ALTER TABLE HXY_EXHIBITION 
    ADD CONSTRAINT HXY_EXHIBITION_HXY_EVENT_FK FOREIGN KEY 
    ( 
     ENVENTID
    ) 
    REFERENCES HXY_EVENT 
    ( 
     ENVENTID
    ) 
;

ALTER TABLE HXY_INDIVIDUAL 
    ADD CONSTRAINT HXY_INDIVIDUAL_HXY_SPONSOR_FK FOREIGN KEY 
    ( 
     SPONSORNO
    ) 
    REFERENCES HXY_SPONSOR 
    ( 
     SPONSORNO
    ) 
;

ALTER TABLE HXY_INVOICE 
    ADD CONSTRAINT HXY_INVOICE_HXY_RENTAL_FK FOREIGN KEY 
    ( 
     RENTID
    ) 
    REFERENCES HXY_RENTAL 
    ( 
     RENTID
    ) 
;

ALTER TABLE HXY_ORGANIZATION 
    ADD CONSTRAINT HXY_ORGANIZATION_SPONSOR_FK FOREIGN KEY 
    ( 
     SPONSORNO
    ) 
    REFERENCES HXY_SPONSOR 
    ( 
     SPONSORNO
    ) 
;

ALTER TABLE HXY_PAYMENT 
    ADD CONSTRAINT HXY_PAYMENT_HXY_INVOICE_FK FOREIGN KEY 
    ( 
     RENTID
    ) 
    REFERENCES HXY_INVOICE 
    ( 
     RENTID
    ) 
;

ALTER TABLE HXY_RENTAL 
    ADD CONSTRAINT HXY_RENTAL_HXY_COPY_FK FOREIGN KEY 
    ( 
     COPYNO,
     BOOKNO
    ) 
    REFERENCES HXY_COPY 
    ( 
     COPYNO,
     BOOKNO
    ) 
;

ALTER TABLE HXY_RENTAL 
    ADD CONSTRAINT HXY_RENTAL_HXY_CUSTOMER_FK FOREIGN KEY 
    ( 
     CUSTNO
    ) 
    REFERENCES HXY_CUSTOMER 
    ( 
     CUSTNO
    ) 
;

ALTER TABLE HXY_RESERVATION 
    ADD CONSTRAINT HXY_RESERVATION_CUSTOMER_FK FOREIGN KEY 
    ( 
     CUSTNO
    ) 
    REFERENCES HXY_CUSTOMER 
    ( 
     CUSTNO
    ) 
;

ALTER TABLE HXY_RESERVATION 
    ADD CONSTRAINT HXY_RESERVATION_HXY_ROOM_FK FOREIGN KEY 
    ( 
     ROOMNO
    ) 
    REFERENCES HXY_ROOM 
    ( 
     ROOMNO
    ) 
;

ALTER TABLE HXY_SEMINAR 
    ADD CONSTRAINT HXY_SEMINAR_HXY_EVENT_FK FOREIGN KEY 
    ( 
     ENVENTID
    ) 
    REFERENCES HXY_EVENT 
    ( 
     ENVENTID
    ) 
;

-- ================================================
-- Additional CHECK Constraints for Data Consistency
-- ================================================

-- 1. Customer ID Type must be one of defined types
ALTER TABLE HXY_CUSTOMER
ADD CONSTRAINT chk_customer_idtype
CHECK (IDTYPE IN ('Passport', 'SSN', 'Driver License'));

-- 2. Copy status must be either Available or Not Available
ALTER TABLE HXY_COPY
ADD CONSTRAINT chk_copy_status
CHECK (STATUS IN ('Available', 'Not Available'));

-- 3. Author Zipcode must be exactly 5 digits
ALTER TABLE HXY_AUTHOR
ADD CONSTRAINT chk_author_zipcode
CHECK (REGEXP_LIKE(ZIPCODE, '^\d{5}$'));

-- 4. Rental Status must be one of Borrowed, Returned, or Late
ALTER TABLE HXY_RENTAL
ADD CONSTRAINT chk_rental_status
CHECK (RENTALSTATUS IN ('Borrowed', 'Returned', 'Late'));

-- 5. Enforce Borrowdate is earlier than return date
ALTER TABLE HXY_RENTAL
ADD CONSTRAINT chk_rental_dates
CHECK (ERETURNDATE >= BORROWDATE AND ARETURNDATE >= BORROWDATE);

-- ================================================
-- Trigger: Generate Invoice When Rental is Returned
-- ================================================

CREATE OR REPLACE TRIGGER trg_generate_invoice
AFTER UPDATE OF RSTATUS ON HXY_RENTAL
FOR EACH ROW
WHEN (NEW.RSTATUS = 'Returned')
DECLARE
    v_invoice_amount NUMBER;
BEGIN
    IF :NEW.ARETURNDATE <= :NEW.ERETURNDATE THEN
        v_invoice_amount := (:NEW.ARETURNDATE - :NEW.BORROWDATE) * 0.2;
    ELSE
        v_invoice_amount := (:NEW.ERETURNDATE - :NEW.BORROWDATE) * 0.2 +
                            (:NEW.ARETURNDATE - :NEW.ERETURNDATE) * 0.4;
    END IF;

    INSERT INTO HXY_INVOICE (INVDATE, INVAMOUNT, RENTID)
    VALUES (
        SYSDATE,
        v_invoice_amount,
        :NEW.RENTID
    );
END;
/


CREATE OR REPLACE TRIGGER ARC_FKArc_5_HXY_SEMINAR 
BEFORE INSERT OR UPDATE OF ENVENTID 
ON HXY_SEMINAR 
FOR EACH ROW 
DECLARE 
    d VARCHAR2 (14); 
BEGIN 
    SELECT A.ETYPE INTO d 
    FROM HXY_EVENT A 
    WHERE A.ENVENTID = :new.ENVENTID; 
    IF (d IS NULL OR d <> 'HXY_SEMINAR') THEN 
        raise_application_error(-20223,'FK HXY_SEMINAR_HXY_EVENT_FK in Table HXY_SEMINAR violates Arc constraint on Table HXY_EVENT - discriminator column ETYPE doesn''t have value ''HXY_SEMINAR'''); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_5_HXY_EXHIBITION 
BEFORE INSERT OR UPDATE OF ENVENTID 
ON HXY_EXHIBITION 
FOR EACH ROW 
DECLARE 
    d VARCHAR2 (14); 
BEGIN 
    SELECT A.ETYPE INTO d 
    FROM HXY_EVENT A 
    WHERE A.ENVENTID = :new.ENVENTID; 
    IF (d IS NULL OR d <> 'HXY_EXHIBITION') THEN 
        raise_application_error(-20223,'FK HXY_EXHIBITION_HXY_EVENT_FK in Table HXY_EXHIBITION violates Arc constraint on Table HXY_EVENT - discriminator column ETYPE doesn''t have value ''HXY_EXHIBITION'''); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_6_HXY_INDIVIDUAL 
BEFORE INSERT OR UPDATE OF SPONSORNO 
ON HXY_INDIVIDUAL 
FOR EACH ROW 
DECLARE 
    d VARCHAR2 (16); 
BEGIN 
    SELECT A.STYPE INTO d 
    FROM HXY_SPONSOR A 
    WHERE A.SPONSORNO = :new.SPONSORNO; 
    IF (d IS NULL OR d <> 'HXY_INDIVIDUAL') THEN 
        raise_application_error(-20223,'FK HXY_INDIVIDUAL_HXY_SPONSOR_FK in Table HXY_INDIVIDUAL violates Arc constraint on Table HXY_SPONSOR - discriminator column STYPE doesn''t have value ''HXY_INDIVIDUAL'''); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_6_HXY_ORGANIZATION 
BEFORE INSERT OR UPDATE OF SPONSORNO 
ON HXY_ORGANIZATION 
FOR EACH ROW 
DECLARE 
    d VARCHAR2 (16); 
BEGIN 
    SELECT A.STYPE INTO d 
    FROM HXY_SPONSOR A 
    WHERE A.SPONSORNO = :new.SPONSORNO; 
    IF (d IS NULL OR d <> 'HXY_ORGANIZATION') THEN 
        raise_application_error(-20223,'FK HXY_ORGANIZATION_SPONSOR_FK in Table HXY_ORGANIZATION violates Arc constraint on Table HXY_SPONSOR - discriminator column STYPE doesn''t have value ''HXY_ORGANIZATION'''); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             0
-- ALTER TABLE                             43
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0




